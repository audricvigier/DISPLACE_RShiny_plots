geom_point(size=2)
}
if(!facet){
plot2return = plot2return +  scale_colour_manual(name="Métier", values=rep(scales::hue_pal()(5),4)[1:length(metChoice)])+
scale_linetype_manual(name="Métier", values=c(rep(1:4,each=5),3)[1:length(metChoice)])+
scale_shape_manual(name="Métier", values=c(rep(c(15:18),each=5),17)[1:length(metChoice)])+
geom_line(size=1,aes(colour=freq_metiers,linetype=freq_metiers))+
geom_point(size=2,aes(colour=freq_metiers,shape=freq_metiers))
}
return(plot2return)
}
# Cumulated over time series, or not cumulated?
variable="revenue"
#averageTrip=T# TO HARD TO HAVE A CONSISTENT VALUE WITH THAT
cumulTime=T
metChoice=NA
facet=F
getEconomicTimeSeries(EconomicsPertrip,variable,cumulTime,metchoice,facet)
getEconomicTimeSeries(EconomicsPertrip,variable,cumulTime,metChoice,facet)
cumulTime=F
metChoice=NA
facet=F
getEconomicTimeSeries(EconomicsPertrip,variable,cumulTime,metChoice,facet)
library(cowplot)
library(data.table)
library(gganimate)
library(grid)
library(gridExtra)
library(shiny)
library(shinydashboard)
library(plotly)
library(tidyverse)
library(viridis)
setwd("D:/work/Displace/DISPLACE_RShiny_plots")
shinyOptions(shiny.autoreload = TRUE)
shinyOptions(shiny.launch.browser = TRUE)
## Source R scripts
source("R-scripts/setGeneralVariable.R", local = TRUE)
general <- setGeneralOverallVariable (pathToRawInputs =file.path("D:/work/Displace/", paste0("DISPLACE_input_gis_","CelticSea")),
pathToDisplaceInputs = file.path("D:/work/Displace/", paste0("DISPLACE_input_","CelticSea")),
pathToOutputs =file.path("D:","DISPLACE_outputs"),
caseStudy="CelticSea",
iGraph=3,
iYear="2010", # Beginning of time series
iYearEnd="2020", # End of time series
iCountry=NULL, #???
nbPops=27,
nbSzgroup=14,
theScenarios= c("calib_multipliers_","calib_multipliers_SCE_"),
nbSimus=20,
useSQLite=FALSE)
source("R-scripts/getBiomassPlots.R", local = TRUE)
source("R-scripts/getCatchPlots.R", local = TRUE)
source("R-scripts/getCPUEPlots.R", local = TRUE)
source("R-scripts/getEffortPlots.R", local = TRUE)
source("R-scripts/getFPlots.R", local = TRUE)
source("R-scripts/mapAverageLayerFiles.R", local = TRUE)
source("R-scripts/polygonPlotsFromAggLoglikeFiles.R", local = TRUE)
source("R-scripts/polygonPlotsFromPopDynFiles.R", local = TRUE)
source("R-scripts/helperFunctions.R", local = TRUE)
source("R-scripts/barplotLanDisPerScenario.R", local = TRUE)
source("R-scripts/responseCurvesSBBandF.R", local = TRUE)
sbox <- shinydashboard::box
outputLocation <- "D:/DISPLACE_outputs/CelticSea/data"
ybeg=2010
yend=2020
## Find available RData files and pick out scenarios
loglikefns <- dir(outputLocation, "loglike.*RData", full.names = TRUE)
loglikescenarios <- gsub("^.*agg_|[.]RData", "", loglikefns)
popdynfns <- dir(outputLocation, "popdyn.*RData", full.names = TRUE)
popdynscenarios <- gsub("^.*popdyn_|[.]RData", "", popdynfns)
scenames=c("Multipliers","Multipliers SCE")
what2="weight"
selected="_all_"
a_baseline="calib_multipliers_"
getStockNames = function(){
codes=read.table(file=paste(general$main.path.ibm, "/pop_names_CelticSea.txt",sep=""),header=T)
stockNames=read.table(file=paste(general$main.path.param,"/POPULATIONS/Stock_biological_traits.csv",sep=""),header=T,sep=",") %>%
select(c(stock,species)) %>%
rename(spp=stock) %>%
merge(codes,by=c("spp")) %>%
rename(PopId=idx)
}
getMetierNames = function(){
codes=read.table(file=paste(general$main.path.ibm, "/metiersspe_CelticSea/metier_names.dat",sep=""),header=T) %>%
rename(metierId=idx)
}
stockNames = getStockNames() %>%
arrange(PopId)
metierNames = getMetierNames() %>%
arrange(metierId)
# annualindicfns <- dir(outputLocation, "lst_annualindic.*RData", full.names = TRUE)
# annualindicscenarios <- gsub("^.*lst_annualindic_|[.]RData", "", popdynfns)
## Load all loglike and popdyn files
#for (f in c(loglikefns, popdynfns, annualindicfns)) load(f, envir = .GlobalEnv)
for (f in c(loglikefns, popdynfns)) load(f, envir = .GlobalEnv)
biomassMaps = effortMaps = allCatchMaps = implicitCatchMaps = explicitCatchMaps = explicitCPUEMaps = explicitCPUEMapsFortnight =list()
biomassTimeSeries = effortTimeSeries = FTimeSeries = implicitCatchTimeSeries = explicitCatchTimeSeries = explicitCPUETimeSeries = explicitCPUETimeSeriesFortnight =list()
for (sce in popdynscenarios){
load(file=paste("D:/DISPLACE_outputs/CelticSea/",sce,"/output/forEffortPlots.Rdata",sep=""))
effortMaps[[sce]]$polygonsICES=polygonsICES
effortMaps[[sce]]$polygonsRTI=polygonsRTI
effortMaps[[sce]]$VesselVmsLikeCond=effortPertrip
effortTimeSeries[[sce]]=effortPertrip %>%
mutate(scename=sce)
load(file=paste("D:/DISPLACE_outputs/CelticSea/",sce,"/output/forBiomassPlots.Rdata",sep=""))
biomassMaps[[sce]]$interimMap=interimMap
biomassMaps[[sce]]$interimMapRTI=interimMapRTI
biomassMaps[[sce]]$interimMapICES=interimMapICES
biomassTimeSeries[[sce]]=PopDyn%>%
mutate(scename=sce)
load(file=paste("D:/DISPLACE_outputs/CelticSea/",sce,"/output/forAllCatchsPlots.Rdata",sep=""))
allCatchMaps[[sce]]$interimMap=allCatchSpatial
allCatchMaps[[sce]]$interimMapRTI=allCatchSpatialRTI
allCatchMaps[[sce]]$interimMapICES=allCatchSpatialICES
load(file=paste("D:/DISPLACE_outputs/CelticSea/",sce,"/output/forImplicitCatchsPlots.Rdata",sep=""))
implicitCatchMaps[[sce]]$interimMap=implicitCatchSpatial
implicitCatchMaps[[sce]]$interimMapRTI=implicitCatchSpatialRTI
implicitCatchMaps[[sce]]$interimMapICES=implicitCatchSpatialICES
implicitCatchTimeSeries[[sce]]=implicitCatch %>%
mutate(scename=sce)
load(file=paste("D:/DISPLACE_outputs/CelticSea/",sce,"/output/forExplicitCatchsPlots.Rdata",sep=""))
explicitCatchMaps[[sce]]$interimMap=explicitCatchSpatial
explicitCatchMaps[[sce]]$interimMapRTI=explicitCatchSpatialRTI
explicitCatchMaps[[sce]]$interimMapICES=explicitCatchSpatialICES
explicitCatchTimeSeries[[sce]]=explicitCatch %>%
mutate(scename=sce)
load(file=paste("D:/DISPLACE_outputs/CelticSea/",sce,"/output/forExplicitCPUEPlots.Rdata",sep=""))
explicitCPUEMaps[[sce]]$interimMap=explicitCatchSpatial
explicitCPUETimeSeries[[sce]]=explicitCatchSpatial
explicitCPUETimeSeriesFortnight[[sce]]=explicitCatchSpatialFortnight
explicitCPUETimeSeries[[sce]]=explicitCatchSpatial %>%
mutate(scename=sce)
explicitCPUETimeSeriesFortnight[[sce]]=explicitCatchSpatialFortnight %>%
mutate(scename=sce)
explicitCPUEMaps[[sce]]$interimMapRTI=explicitCatchSpatialRTI
explicitCPUEMaps[[sce]]$interimMapICES=explicitCatchSpatialICES
explicitCPUEMapsFortnight[[sce]]$interimMap=explicitCatchSpatialFortnight
explicitCPUEMapsFortnight[[sce]]$interimMapRTI=explicitCatchSpatialRTIFortnight
explicitCPUEMapsFortnight[[sce]]$interimMapICES=explicitCatchSpatialICESFortnight
load(file=paste("D:/DISPLACE_outputs/CelticSea/",sce,"/output/forFPlots.Rdata",sep=""))
FTimeSeries[[sce]]=FestimatesYear %>%
mutate(scename=sce)
}
biomassTimeSeries = plyr::ldply(biomassTimeSeries)
FTimeSeries = plyr::ldply(FTimeSeries)
effortTimeSeries = plyr::ldply(effortTimeSeries)
explicitCatchTimeSeries = plyr::ldply(explicitCatchTimeSeries)
implicitCatchTimeSeries = plyr::ldply(implicitCatchTimeSeries)
explicitCPUETimeSeries = plyr::ldply(explicitCPUETimeSeries)
explicitCPUETimeSeriesFortnight = plyr::ldply(explicitCPUETimeSeriesFortnight)
## and read some tables
fleetindicfns <- dir(outputLocation, "outcomes_all_simus_relative_to_baseline_sce_*", full.names = TRUE)
fleetindicnames <- gsub("^.*outcomes_all_simus_|[.]txt", "", fleetindicfns)
for (fi in 1: length(fleetindicfns)) assign(fleetindicnames[fi], read.table(fleetindicfns[fi], header=TRUE, sep=";"))
## Read population names
#popnames <- read.table("data/CelticSea44/pop_names_CelticSea.txt", header = TRUE); save("popnames", file = "data/popnames.Rdata")
load(file = paste(outputLocation,"/popnames.Rdata",sep=""))
convertMenuItem <- function(tabName, mi) {
mi$children[[1]]$attribs['data-toggle'] = "tab"
mi$children[[1]]$attribs['data-value'] = tabName
mi
}
str(biomassTimeSeries)
NBSSBLengthBin = biomassTimeSeries %>%
group_by(TStep,PopId,PopGroup,scename)  %>%
merge(stockNames, by=c("PopId")) %>%
group_by(TStep,species,PopGroup,scename) %>%
mutate(B=SSB/PropMature) %>%
summarize(SSB=sum(SSB)/1000,B=sum(B)/1000,Nz=sum(Nz))  # Convert in tons
SSBPlot =NBSSBLengthBin %>%
mutate(PopGroup=as.factor(PopGroup)) %>%
ggplot(aes(TStep,SSB,colour=PopGroup,linetype=PopGroup,shape=PopGroup)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Time step (month)",y="SSB\n(tons)",colour="Size bin",linetype="Size bin",shape="Size bin")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()(5),3)[1:14])+
scale_linetype_manual(values=rep(1:3,each=5)[1:14])+
scale_shape_manual(values=rep(16:18,each=5)[1:14])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
NBSSBLengthBin = biomassTimeSeries %>%
group_by(TStep,PopId,PopGroup,scename)  %>%
merge(stockNames, by=c("PopId")) %>%
group_by(TStep,species,PopGroup,scename) %>%
mutate(B=SSB/PropMature) %>%
summarize(SSB=sum(SSB)/1000,B=sum(B)/1000,Nz=sum(Nz)) %>%   # Convert in tons
ungroup()
SSBPlot =NBSSBLengthBin %>%
mutate(PopGroup=as.factor(PopGroup)) %>%
ggplot(aes(TStep,SSB,colour=PopGroup,linetype=PopGroup,shape=PopGroup)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Time step (month)",y="SSB\n(tons)",colour="Size bin",linetype="Size bin",shape="Size bin")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()(5),3)[1:14])+
scale_linetype_manual(values=rep(1:3,each=5)[1:14])+
scale_shape_manual(values=rep(16:18,each=5)[1:14])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
SSBPlot
str(NBSSBLengthBin)
unique(NBSSBLengthBin$TStep)
SSBPlot2 = NBSSBLengthBin %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,SSB,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\n(tons)",colour="Time step (month)",linetype="Time step (month)",shape="Time step (month)")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()(12),4)[1:37])+
scale_linetype_manual(values=rep(1:4,each=12)[1:37])+
scale_shape_manual(values=rep(16:19,each=12)[1:37])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
SSBPlot2
SSBPlot3 = NBSSBLengthBin %>%
mutate(SSB=SSB/sum(SSB)) %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,SSB,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\ndistribution",colour="Time step (month)",linetype="Time step (month)",shape="Time step (month)")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()(12),4)[1:37])+
scale_linetype_manual(values=rep(1:4,each=12)[1:37])+
scale_shape_manual(values=rep(16:19,each=12)[1:37])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
SSBPlot3
NBSSBLengthBin = data2plot %>%
group_by(TStep,PopId,PopGroup,scename)  %>%
merge(stockNames, by=c("PopId")) %>%
group_by(TStep,species,PopGroup,scename) %>%
mutate(B=SSB/PropMature) %>%
summarize(SSB=sum(SSB)/1000,B=sum(B)/1000,Nz=sum(Nz)) %>%   # Convert in tons
ungroup()
data2plot=biomassTimeSeries
NBSSBLengthBin = data2plot %>%
group_by(TStep,PopId,PopGroup,scename)  %>%
merge(stockNames, by=c("PopId")) %>%
group_by(TStep,species,PopGroup,scename) %>%
mutate(B=SSB/PropMature) %>%
summarize(SSB=sum(SSB)/1000,B=sum(B)/1000,Nz=sum(Nz)) %>%   # Convert in tons
ungroup()
str(NBSSBLengthBin)
NBSSBLengthBin = data2plot %>%
group_by(TStep,PopId,PopGroup,scename)  %>%
merge(stockNames, by=c("PopId")) %>%
group_by(TStep,species,PopGroup,scename) %>%
mutate(B=SSB/PropMature) %>%
summarize(SSB=sum(SSB)/1000,B=sum(B)/1000,Nz=sum(Nz)) %>%   # Convert in tons
ungroup()
NBSSBLengthBin = NBSSBLengthBin %>%
mutate(TStep=factor(TStep,sort(unique(TStep)),labels=1:length(unique(TStep)))) %>%
filter(TStep==floor((as.numeric(levels(TStep))[TStep]-1)/12)) %>%
mutate(TStep=as.numeric(levels(TStep))[TStep])
str(NBSSBLengthBin)
NBSSBLengthBin = data2plot %>%
group_by(TStep,PopId,PopGroup,scename)  %>%
merge(stockNames, by=c("PopId")) %>%
group_by(TStep,species,PopGroup,scename) %>%
mutate(B=SSB/PropMature) %>%
summarize(SSB=sum(SSB)/1000,B=sum(B)/1000,Nz=sum(Nz)) %>%   # Convert in tons
ungroup()
aaa = NBSSBLengthBin %>%
mutate(TStep=factor(TStep,sort(unique(TStep)),labels=1:length(unique(TStep))))
str(aaa)
aaa = NBSSBLengthBin %>%
mutate(TStep=factor(TStep,sort(unique(TStep)),labels=1:length(unique(TStep)))) %>%
filter(TStep==floor((as.numeric(levels(TStep))[TStep]-1)/12))
str(aaa)
aaa = NBSSBLengthBin %>%
mutate(TStep=factor(TStep,sort(unique(TStep)),labels=1:length(unique(TStep)))) %>%
filter((as.numeric(levels(TStep))[TStep]-1)/12)==floor((as.numeric(levels(TStep))[TStep]-1)/12)) %>%
mutate(TStep=as.numeric(levels(TStep))[TStep])
aaa = NBSSBLengthBin %>%
mutate(TStep=factor(TStep,sort(unique(TStep)),labels=1:length(unique(TStep)))) %>%
filter((as.numeric(levels(TStep))[TStep]-1)/12==floor((as.numeric(levels(TStep))[TStep]-1)/12)) %>%
mutate(TStep=as.numeric(levels(TStep))[TStep])
str(aaa)
unique(aaa$TStep)
SSBPlot =NBSSBLengthBin %>%
mutate(PopGroup=as.factor(PopGroup)) %>%
ggplot(aes(TStep,SSB,colour=PopGroup,linetype=PopGroup,shape=PopGroup)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Time step (month)",y="SSB\n(tons)",colour="Size bin",linetype="Size bin",shape="Size bin")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()(5),3)[1:14])+
scale_linetype_manual(values=rep(1:3,each=5)[1:14])+
scale_shape_manual(values=rep(16:18,each=5)[1:14])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
SSBPlot
NBSSBLengthBin = NBSSBLengthBin %>%
mutate(TStep=factor(TStep,sort(unique(TStep)),labels=1:length(unique(TStep)))) %>%
filter((as.numeric(levels(TStep))[TStep]-1)/12==floor((as.numeric(levels(TStep))[TStep]-1)/12)) %>%
mutate(TStep=as.numeric(levels(TStep))[TStep])
SSBPlot =NBSSBLengthBin %>%
mutate(PopGroup=as.factor(PopGroup)) %>%
ggplot(aes(TStep,SSB,colour=PopGroup,linetype=PopGroup,shape=PopGroup)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Time step (month)",y="SSB\n(tons)",colour="Size bin",linetype="Size bin",shape="Size bin")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()(5),3)[1:14])+
scale_linetype_manual(values=rep(1:3,each=5)[1:14])+
scale_shape_manual(values=rep(16:18,each=5)[1:14])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
SSBPlot
SSBPlot2 = NBSSBLengthBin %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,SSB,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\n(tons)",colour="Time step (month)",linetype="Time step (month)",shape="Time step (month)")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()(12),4)[1:37])+
scale_linetype_manual(values=rep(1:4,each=12)[1:37])+
scale_shape_manual(values=rep(16:19,each=12)[1:37])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
SSBPlot2
length(unique(NBSSBLengthBin$TStep))
floor(length(unique(NBSSBLengthBin$TStep))/4)
SSBPlot2 = NBSSBLengthBin %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,SSB,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\n(tons)",colour="Time step (month)",linetype="Time step (month)",shape="Time step (month)")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()( floor(length(unique(NBSSBLengthBin$TStep))/4)),4)[1:length(unique(NBSSBLengthBin$TStep))])+
scale_linetype_manual(values=rep(1:4,each= floor(length(unique(NBSSBLengthBin$TStep))/4))[1:length(unique(NBSSBLengthBin$TStep))])+
scale_shape_manual(values=rep(16:19,each= floor(length(unique(NBSSBLengthBin$TStep))/4))[1:length(unique(NBSSBLengthBin$TStep))])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
SSBPlot2
SSBPlot2 = NBSSBLengthBin %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,SSB,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\n(tons)",colour="Time step (month)",linetype="Time step (month)",shape="Time step (month)")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()(12),4)[1:length(unique(NBSSBLengthBin$TStep))])+
scale_linetype_manual(values=rep(1:4,each=12)[1:length(unique(NBSSBLengthBin$TStep))])+
scale_shape_manual(values=rep(16:19,each=12)[1:length(unique(NBSSBLengthBin$TStep))])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
SSBPlot2
aes2 = 4
15+1:aes2
floor(length(unique(NBSSBLengthBin$TStep))/4)
aes1 = length(unique(NBSSBLengthBin$TStep))
if(aes1>12) aes1=12
aes2 = floor((length(unique(NBSSBLengthBin$TStep))-1)/12)
colourPalette = rep(scales::hue_pal()(12),aes2)[1:length(unique(NBSSBLengthBin$TStep))]
linetypes = rep(1:aes2,each=12)[1:length(unique(NBSSBLengthBin$TStep))])
shapes = rep((15+1:aes2),each=12)[1:length(unique(NBSSBLengthBin$TStep))]
plot2render = NBSSBLengthBin %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,value,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\n(tons)",colour="Time\nstep\n(month)",linetype="Time\nstep\n(month)",shape="Time\nstep\n(month)")+
expand_limits(y=0)+
scale_colour_manual(values=colourPalette)+
scale_linetype_manual(values=linetypes)+
scale_shape_manual(values=shapes)+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
aes1 = length(unique(NBSSBLengthBin$TStep))
if(aes1>12) aes1=12
aes2 = floor((length(unique(NBSSBLengthBin$TStep))-1)/12)
colourPalette = rep(scales::hue_pal()(aes1),aes2)[1:length(unique(NBSSBLengthBin$TStep))]
linetypes = rep(1:aes2,each=aes1)[1:length(unique(NBSSBLengthBin$TStep))])
shapes = rep((15+1:aes2),each=aes1)[1:length(unique(NBSSBLengthBin$TStep))]
plot2render = NBSSBLengthBin %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,value,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\n(tons)",colour="Time\nstep\n(month)",linetype="Time\nstep\n(month)",shape="Time\nstep\n(month)")+
expand_limits(y=0)+
scale_colour_manual(values=colourPalette)+
scale_linetype_manual(values=linetypes)+
scale_shape_manual(values=shapes)+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
aes1 = length(unique(NBSSBLengthBin$TStep))
if(aes1>12) aes1=12
aes2 = floor((length(unique(NBSSBLengthBin$TStep))-1)/12)
colourPalette = rep(scales::hue_pal()(aes1),aes2)[1:length(unique(NBSSBLengthBin$TStep))]
linetypes = rep(1:aes2,each=aes1)[1:length(unique(NBSSBLengthBin$TStep))]
shapes = rep((15+1:aes2),each=aes1)[1:length(unique(NBSSBLengthBin$TStep))]
plot2render = NBSSBLengthBin %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,value,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\n(tons)",colour="Time\nstep\n(month)",linetype="Time\nstep\n(month)",shape="Time\nstep\n(month)")+
expand_limits(y=0)+
scale_colour_manual(values=colourPalette)+
scale_linetype_manual(values=linetypes)+
scale_shape_manual(values=shapes)+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
plot2render
if(variable=="SSB") NBSSBLengthBin$value=NBSSBLengthBin$SSB
if(variable=="B") NBSSBLengthBin$value=NBSSBLengthBin$B
if(variable=="N") NBSSBLengthBin$value=NBSSBLengthBin$N
variable="N"
if(variable=="SSB") NBSSBLengthBin$value=NBSSBLengthBin$SSB
if(variable=="B") NBSSBLengthBin$value=NBSSBLengthBin$B
if(variable=="N") NBSSBLengthBin$value=NBSSBLengthBin$N
NBSSBLengthBin = data2plot %>%
group_by(TStep,PopId,PopGroup,scename)  %>%
merge(stockNames, by=c("PopId")) %>%
group_by(TStep,species,PopGroup,scename) %>%
mutate(B=SSB/PropMature) %>%
summarize(SSB=sum(SSB)/1000,B=sum(B)/1000,Nz=sum(Nz)) %>%   # Convert in tons
ungroup()
NBSSBLengthBin = NBSSBLengthBin %>%
mutate(TStep=factor(TStep,sort(unique(TStep)),labels=1:length(unique(TStep)))) %>%
filter((as.numeric(levels(TStep))[TStep]-1)/12==floor((as.numeric(levels(TStep))[TStep]-1)/12)) %>%
mutate(TStep=as.numeric(levels(TStep))[TStep])
if(variable=="SSB") NBSSBLengthBin$value=NBSSBLengthBin$SSB
if(variable=="B") NBSSBLengthBin$value=NBSSBLengthBin$B
if(variable=="N") NBSSBLengthBin$value=NBSSBLengthBin$N
if(variable=="N") NBSSBLengthBin$value=NBSSBLengthBin$Nz
plot2render =NBSSBLengthBin %>%
mutate(PopGroup=as.factor(PopGroup)) %>%
ggplot(aes(TStep,value,colour=PopGroup,linetype=PopGroup,shape=PopGroup)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Time step (month)",y="SSB\n(tons)",colour="Size bin",linetype="Size bin",shape="Size bin")+
expand_limits(y=0)+
scale_colour_manual(values=rep(scales::hue_pal()(5),3)[1:14])+
scale_linetype_manual(values=rep(1:3,each=5)[1:14])+
scale_shape_manual(values=rep(16:18,each=5)[1:14])+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
plot2render
aes1 = length(unique(NBSSBLengthBin$TStep))
if(aes1>12) aes1=12
aes2 = floor((length(unique(NBSSBLengthBin$TStep))-1)/12)
colourPalette = rep(scales::hue_pal()(aes1),aes2)[1:length(unique(NBSSBLengthBin$TStep))]
linetypes = rep(1:aes2,each=aes1)[1:length(unique(NBSSBLengthBin$TStep))]
shapes = rep((15+1:aes2),each=aes1)[1:length(unique(NBSSBLengthBin$TStep))]
plot2render = NBSSBLengthBin %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,value,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\n(tons)",colour="Time\nstep\n(month)",linetype="Time\nstep\n(month)",shape="Time\nstep\n(month)")+
expand_limits(y=0)+
scale_colour_manual(values=colourPalette)+
scale_linetype_manual(values=linetypes)+
scale_shape_manual(values=shapes)+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
plot2render
aes1
aes2
aes1 = length(unique(NBSSBLengthBin$TStep))
if(aes1>12) aes1=12
aes2 = 1+floor((length(unique(NBSSBLengthBin$TStep))-1)/12)
colourPalette = rep(scales::hue_pal()(aes1),aes2)[1:length(unique(NBSSBLengthBin$TStep))]
linetypes = rep(1:aes2,each=aes1)[1:length(unique(NBSSBLengthBin$TStep))]
shapes = rep((15+1:aes2),each=aes1)[1:length(unique(NBSSBLengthBin$TStep))]
plot2render = NBSSBLengthBin %>%
ungroup() %>%
mutate(TStep=as.factor(TStep)) %>%
ggplot(aes(PopGroup,value,colour=TStep,linetype=TStep,shape=TStep)) +
geom_line(size=1)+
geom_point(size=2)+
facet_wrap(~species, scales="free_y")+
labs(x="Size bin",y="SSB\n(tons)",colour="Time\nstep\n(month)",linetype="Time\nstep\n(month)",shape="Time\nstep\n(month)")+
expand_limits(y=0)+
scale_colour_manual(values=colourPalette)+
scale_linetype_manual(values=linetypes)+
scale_shape_manual(values=shapes)+
theme_minimal()+
theme(axis.title.y=element_text(angle=0,vjust=0.5),strip.text=element_text(face="italic"))
plot2render
