merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
str(VesselLogLikeCatches)
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId,Id)) %>%
unique() %>%
rename(LoglikeId=RowId)
str(stepLogLikeId)
str(VesselLogLikeCatches)
cumcatchLog=VesselLogLikeCatches %>%
merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
str(cumcatchLog)
str(VesselVmsLikeCond)
VesselVmsLikeCond = VesselVmsLike %>%  # Pb: VesselLogLike's NodeId is the habrour, not the actual fishing location. get the fishing location here
filter(State==1) %>%
group_by(Id,TStepDep) %>%
filter(TStep==max(TStep)) %>%
ungroup() %>%
select(-c(CumFuel,Course,State)) %>%
unique() %>%
merge(nodes2merge,by=c("Long","Lat"))
beuaaah = cumcatchLog %>%
merge(subset(VesselVmsLikeCond, select=-c(TStep)), by=c("Id","TStepDep"))
str(cumcatchLog)
str(beuaaah)
sum(beuaaah$Catches)
sum(cumcatchLog$Catches)
beuaaah = cumcatchLog %>%
merge(subset(VesselVmsLikeCond, select=-c(TStep)), by=c("Id","TStepDep"),all.x=T)
sum(beuaaah$Catches)
str(beuaaah)
length(which(is.na(beuaaah$Lat)))
NodesPb = beuaaah %>%
select(c(Long,Lay,NodeId)) %>%
unique()
NodesPb = beuaaah %>%
select(c(Long,Lat,NodeId)) %>%
unique()
str(NodesPb)
NodesPb %>%
ggplot(aes(x=Long,y=Lat)) +
geom_point()
head(nodes2merge)
head(VesselVmsLikeCond)
str(VesselVmsLike)
VesselVmsLikeCond = VesselVmsLike %>%  # Pb: VesselLogLike's NodeId is the harbour, not the actual fishing location. get the fishing location here
filter(State==1) %>%
group_by(Id,TStepDep) %>%
filter(TStep==max(TStep)) %>%
ungroup() %>%
select(-c(CumFuel,Course,State)) %>%
unique() %>%
merge(nodes2merge,by=c("Long","Lat"))
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId,Id)) %>%
unique() %>%
rename(LoglikeId=RowId)
cumcatchLog=VesselLogLikeCatches %>%
merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
str(cumcatchLog)
VesselVmsLikeCond = VesselVmsLike %>%  # Pb: VesselLogLike's NodeId is the harbour, not the actual fishing location. get the fishing location here
filter(State==1) %>%
group_by(Id,TStepDep) %>%
filter(TStep==max(TStep)) %>%
ungroup() %>%
select(-c(CumFuel,Course,State)) %>%
unique() %>%
merge(nodes2merge,by=c("Long","Lat"))
str(VesselVmsLikeCond)
head(VesselVmsLikeCond)
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId,Id)) %>%
unique() %>%
rename(LoglikeId=RowId)
str(stepLogLikeId)
str(VesselVmsLikeCond)
str(VesselLogLikeCatches)
aaa = VesselVmsLikeCond %>%
select(c(Id,TStepDep))
aaa = VesselVmsLikeCond %>%
select(c(Id,TStepDep)) %>%
unique()
bbb = VesselLogLike %>%
select(c(Id,TStepDep)) %>%
unique()
aaa
str(aaa)
str(bbb)
View(VesselVmsLike)
VesselVmsLikeCond = VesselVmsLike %>%  # Pb: VesselLogLike's NodeId is the harbour, not the actual fishing location. get the fishing location here
filter(State==1) %>%
group_by(Id,TStepDep) %>%
filter(TStep==max(TStep)) %>%
ungroup() %>%
select(-c(CumFuel,Course,State)) %>%
unique()
str(VesselVmsLikeCond)
VesselVmsLikeCond = VesselVmsLike %>%  # Pb: VesselLogLike's NodeId is the harbour, not the actual fishing location. get the fishing location here
filter(State==1) %>%
group_by(Id,TStepDep) %>%
filter(TStep==max(TStep)) %>%
ungroup() %>%
select(-c(CumFuel,Course,State)) %>%
unique() %>%
merge(nodes2merge,by=c("Long","Lat"))
str(VesselVmsLikeCond)
which(is.na(VesselVmsLikeCond$Lat))
aaa = VesselVmsLikeCond %>%
select(c(Id,TStepDep)) %>%
unique()
str(aaa)
str(VesselLogLike)
bbb = VesselLogLike %>%
select(c(Id,TStepDep)) %>%
unique()
str(bbb)
range(VesselVmsLike$TStep)
range(VesselLogLike$TStep)
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId,NodeId)) %>%
rename(LoglikeId=RowId)
cumcatchLog=VesselLogLikeCatches %>%
merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
select(-c(TStepDep))%>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
# TStep is the time step at the end of the month, e.g. 745 is the end of Jan 2010
cumcatchLog = cumcatchLog %>%
group_by(PopId,month,metierId,NodeId) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup() %>%
merge(nodes2merge, by=c("NodeId"))
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId)) %>%
rename(LoglikeId=RowId)
cumcatchLog=VesselLogLikeCatches %>%
merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
select(-c(TStepDep))%>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
# TStep is the time step at the end of the month, e.g. 745 is the end of Jan 2010
str(stepLogLikeId)
str(cumcatchLog)
beuah = cumcatchLog %>%
group_by(PopId,month,metierId,NodeId) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup()
beuah = cumcatchLog %>%
group_by(PopId,month,metierId) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup()
str(beuah)
beuah = cumcatchLog %>%
group_by(PopId,month,metierId) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup() %>%
melt(id.vars=c("PopId","month","metierId","year")) %>%
rename(variable="Fraction")
beuah = cumcatchLog %>%
group_by(PopId,month,metierId) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup() %>%
melt(id.vars=c("PopId","month","metierId","year")) %>%
rename(Fraction=variable)
?melt
str(beuah)
explicitCatch = getExplicitCatch(VesselLogLike,VesselLogLikeCatches)
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId)) %>%
rename(LoglikeId=RowId)
str(stepLogLikeId)
str(VesselVmsLikeCond)
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId,Id)) %>%
unique() %>%
rename(LoglikeId=RowId)
str(stepLogLikeId)
select(c(RowId,TStepDep,TStep,metierId,Id)) %>%
unique() %>%
rename(LoglikeId=RowId)
cumcatchLog=VesselLogLikeCatches %>%
merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
# TStep is the time step at the end of the month, e.g. 745 is the end of Jan 2010
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId,Id)) %>%
unique() %>%
rename(LoglikeId=RowId)
cumcatchLog=VesselLogLikeCatches %>%
merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
# TStep is the time step at the end of the month, e.g. 745 is the end of Jan 2010
str(cumcatchLog)
beuaaah = cumcatchLog %>%
merge(subset(VesselVmsLikeCond, select=-c(TStep)), by=c("Id","TStepDep"),all.x=T)
sum(beuaaah$Catches)
beuaaah = cumcatchLog %>%
merge(subset(VesselVmsLikeCond, select=-c(TStep)), by=c("Id","TStepDep"))
sum(beuaaah$Catches)
sum(cumcatchLog$Catches[cumcatchLog$TStep<762])
sum(cumcatchLog$Catches[cumcatchLog$TStep<8762])
sum(cumcatchLog$Catches[cumcatchLog$TStep<8763])
str(beuaaah)
beuaaah = cumcatchLog %>%
merge(subset(VesselVmsLikeCond, select=-c(TStep)), by=c("Id","TStepDep"))%>%
group_by(PopId,month,metierId,NodeId,icesrectanglecode,rtirectangle,Long,Lat) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup()
str(beuaaah)
cumcatchLog = cumcatchLog %>%
merge(subset(VesselVmsLikeCond, select=-c(TStep)), by=c("Id","TStepDep"))%>%
group_by(PopId,month,metierId,NodeId,icesrectanglecode,rtirectangle,Long,Lat) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup() %>%
melt(id.vars=c("PopId","month","metierId","NodeId","icesrectanglecode","rtirectangle","Long","Lat","year")) %>%
rename(Fraction=variable)
str(cumcatchLog)
cumcatchLog = explicitCatch
explicitCatch = getExplicitCatch(VesselLogLike,VesselLogLikeCatches) # Includes discards
getExplicitCatch = function(VesselLogLike,VesselLogLikeCatches,months,nodes2merge){
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId)) %>%
rename(LoglikeId=RowId)
cumcatchLog=VesselLogLikeCatches %>%
merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
select(-c(TStepDep))%>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
# TStep is the time step at the end of the month, e.g. 745 is the end of Jan 2010
cumcatchLog = cumcatchLog %>%
group_by(PopId,month,metierId) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup() %>%
melt(id.vars=c("PopId","month","metierId","year")) %>%
rename(Fraction=variable)
return(cumcatchLog)
}
explicitCatch = getExplicitCatch(VesselLogLike,VesselLogLikeCatches) # Includes discards
explicitCatch = getExplicitCatch(VesselLogLike,VesselLogLikeCatches,months,nodes2merge) # Includes discards
cumcatchLog = explicitCatch
ImplicitCatch = PopValues %>%
group_by(TStep,PopId,NodeId) %>% # Eliminate duplicates rows at last time step
filter(row_number() == 1) %>%
ungroup()
class(ImplicitCatch)
ImplicitCatch
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) %>%
group_by(PopId) %>%
mutate(CumDiscards=c(min(CumDiscards),diff(CumDiscards)),CumCatches=c(min(CumCatches),diff(CumCatches))) %>% # From cumulative time series to time series
ungroup() %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
class(beuaaah)
beuaaah
str(cumcatchLog)
str(cumcatchLog)
getExplicitCatch = function(VesselLogLike,VesselLogLikeCatches,months,nodes2merge){
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId)) %>%
rename(LoglikeId=RowId)
cumcatchLog=VesselLogLikeCatches %>%
merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
select(-c(TStepDep))%>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
# TStep is the time step at the end of the month, e.g. 745 is the end of Jan 2010
cumcatchLog = cumcatchLog %>%
group_by(PopId,month,metierId) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup() %>%
melt(id.vars=c("PopId","month","metierId","year")) %>%
rename(Fraction=variable) %>%
mutate(value=value/1000) # Convert to tons
return(cumcatchLog)
}
explicitCatch = getExplicitCatch(VesselLogLike,VesselLogLikeCatches,months,nodes2merge) # Includes discards
str(explicitCatch)
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value))
cumcatchLog
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
dcast(Fraction~PopId+month,year,value.var="value")
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
dcast(.,Fraction~PopId+month,year,value.var="value")
?dcast
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
dcast(Fraction~PopId+month,year,.,value.var="value")
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
reshape2::dcast(Fraction~PopId+month,year,.,value.var="value")
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
reshape2::dcast(.,Fraction~PopId+month,year,value.var="value")
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
ungroup() %>%
reshape2::dcast(.,Fraction~PopId+month,year,value.var="value")
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
ungroup() %>%
reshape2::dcast(.,PopId+month~Fraction,year,value.var="value")
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
ungroup()
cumcatchLog
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
ungroup() %>%
as.data.frame()
str(cumcatchLog)
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
ungroup() %>%
as.data.frame() %>%
reshape2::dcast(.,PopId+month~Fraction,year,value.var="value")
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
ungroup() %>%
as.data.frame() %>%
reshape2::dcast(.,PopId+month+year~Fraction,value.var="value")
str(cumcatchLog)
ImplicitCatch = PopValues %>%
group_by(TStep,PopId,NodeId) %>% # Eliminate duplicates rows at last time step
filter(row_number() == 1) %>%
ungroup()
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) %>%
group_by(PopId) %>%
mutate(CumDiscards=c(min(CumDiscards),diff(CumDiscards)),CumCatches=c(min(CumCatches),diff(CumCatches))) %>% # From cumulative time series to time series
ungroup() %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] )) %>%
group_by(month,PopId) %>%
rename
summarise_at(c("CumDiscards","CumCatches"),sum)
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) %>%
group_by(PopId) %>%
mutate(CumDiscards=c(min(CumDiscards),diff(CumDiscards)),CumCatches=c(min(CumCatches),diff(CumCatches))) %>% # From cumulative time series to time series
ungroup() %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] )) %>%
group_by(month,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum)
beuaaah
972/27
srt(cumcatchLog)
str(cumcatchLog)
972/27
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) %>%
group_by(PopId) %>%
mutate(CumDiscards=c(min(CumDiscards),diff(CumDiscards)),CumCatches=c(min(CumCatches),diff(CumCatches))) %>% # From cumulative time series to time series
ungroup() %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] )) %>%
group_by(month,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>%
merge(cumcatchLog, by=c("month","PopId"))%>% # Convert to tons
mutate(Catches =CumCatches-Catches, Discards =CumDiscards-Discards) %>%
select(-c(CumDiscards,CumCatches)) %>%
group_by(month,PopId,year)
beuaaah
range(beuaaah$Catches)
range(beuaaah$Discards)
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep)
str( beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) )
str(beuaaah)
beuaaah
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) %>%
group_by(PopId) %>%
mutate(CumDiscards=c(min(CumDiscards),diff(CumDiscards)),CumCatches=c(min(CumCatches),diff(CumCatches))) %>% # From cumulative time series to time series
ungroup() %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>x]))] ))
str(beuaaah)
month
months
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) %>%
group_by(PopId) %>%
mutate(CumDiscards=c(min(CumDiscards),diff(CumDiscards)),CumCatches=c(min(CumCatches),diff(CumCatches))) %>% # From cumulative time series to time series
ungroup() %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>=x]))] )) %>%
group_by(month,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>%
merge(cumcatchLog, by=c("month","PopId"))%>% # Convert to tons
mutate(Catches =CumCatches-Catches, Discards =CumDiscards-Discards) %>%
select(-c(CumDiscards,CumCatches)) %>%
group_by(month,PopId,year)
beuaaah
range(beuaaah$Catches)
range(beuaaah$Discards)
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) %>%
group_by(PopId) %>%
mutate(CumDiscards=c(min(CumDiscards),diff(CumDiscards)),CumCatches=c(min(CumCatches),diff(CumCatches))) %>% # From cumulative time series to time series
ungroup() %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>=x]))] ))
beuaaah
getExplicitCatch = function(VesselLogLike,VesselLogLikeCatches,months,nodes2merge){
stepLogLikeId = VesselLogLike %>%
select(c(RowId,TStepDep,TStep,metierId)) %>%
rename(LoglikeId=RowId)
cumcatchLog=VesselLogLikeCatches %>%
merge(stepLogLikeId, by=c("LoglikeId"),all=T) %>%
select(-c(TStepDep))%>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>=x]))] ))
# TStep is the time step at the end of the month, e.g. 745 is the end of Jan 2010
cumcatchLog = cumcatchLog %>%
group_by(PopId,month,metierId) %>%
summarise_at(c("Catches","Discards"),sum) %>%
mutate(year=2010+floor((month-1)/12)) %>%
ungroup() %>%
melt(id.vars=c("PopId","month","metierId","year")) %>%
rename(Fraction=variable) %>%
mutate(value=value/1000) # Convert to tons
return(cumcatchLog)
}
explicitCatch = getExplicitCatch(VesselLogLike,VesselLogLikeCatches,months,nodes2merge) # Includes discards
cumcatchLog = explicitCatch %>%
group_by(PopId,month,year,Fraction) %>%
summarize(value=sum(value)) %>%
ungroup() %>%
as.data.frame() %>%
reshape2::dcast(.,PopId+month+year~Fraction,value.var="value")
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) %>%
group_by(PopId) %>%
mutate(CumDiscards=c(min(CumDiscards),diff(CumDiscards)),CumCatches=c(min(CumCatches),diff(CumCatches))) %>% # From cumulative time series to time series
ungroup() %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>=x]))] )) %>%
group_by(month,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>%
merge(cumcatchLog, by=c("month","PopId"))%>% # Convert to tons
mutate(Catches =CumCatches-Catches, Discards =CumDiscards-Discards) %>%
select(-c(CumDiscards,CumCatches)) %>%
group_by(month,PopId,year)
range(beuaaah$Catches)
range(beuaaah$Discards)
beuaaah
View(beuaaah)
beuaaah
beuaaah = ImplicitCatch %>%
group_by(TStep,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>% # COnvert to tons
mutate(CumDiscards=CumDiscards/1000,CumCatches=CumCatches/1000) %>%
arrange(PopId,TStep) %>%
group_by(PopId) %>%
mutate(CumDiscards=c(min(CumDiscards),diff(CumDiscards)),CumCatches=c(min(CumCatches),diff(CumCatches))) %>% # From cumulative time series to time series
ungroup() %>%
mutate(month = sapply(TStep, function(x) months$month[which(months$TStep==min(months$TStep[months$TStep>=x]))] )) %>%
group_by(month,PopId) %>%
summarise_at(c("CumDiscards","CumCatches"),sum) %>%
merge(cumcatchLog, by=c("month","PopId"))%>% # Convert to tons
mutate(Catches =CumCatches-Catches, Discards =CumDiscards-Discards) %>%
select(-c(CumDiscards,CumCatches)) %>%
group_by(month,PopId,year) %>%
melt(id.vars=c("PopId","month","year")) %>%
rename(Fraction=variable)
str(beuaaah)
